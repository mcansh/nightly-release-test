name: üåí Nightly Release

on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *" # every day at 5PM EST

# HEADS UP! this workflow will only ever run on the `main` branch due to it being a cron job,
# and the last commit on main will be what github shows as the trigger
# however in the checkout below we specify the `dev` branch, so all the scripts
# will be ran from that, confusing i know, so in some cases we'll need to create
# multiple PRs when modifying nightly release processes
jobs:
  nightly:
    name: üåí Nightly Release
    if: github.repository == 'mcansh/nightly-release-test'
    runs-on: ubuntu-latest
    outputs:
      # allows this to be used in the `comment` job below
      NEXT_VERSION: ${{ steps.version.outputs.NEXT_VERSION }}
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          ref: dev
          # checkout using a custom token so that we can push later on
          token: ${{ secrets.NIGHTLY_PAT }}
          fetch-depth: 0

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"

      - name: üì• Install deps
        uses: bahmutov/npm-install@v1

      - name: ‚§¥Ô∏è Update Version
        id: version
        run: |
          git config --local user.email "hello@remix.run"
          git config --local user.name "Remix Run Bot"

          echo "console.log(\"greetings ${DATE}; nightly release\");" > ./src/index.ts
          git add .
          git commit -m "chore: updated ${DATE}"

          SHA=$(git rev-parse HEAD)
          SHORT_SHA=${SHA::7}
          DATE=$(date '+%Y%m%d')
          NEXT_VERSION=0.0.0-nightly-${SHORT_SHA}-${DATE}
          echo ::set-output name=NEXT_VERSION::${NEXT_VERSION}

          git checkout -b nightly/${NEXT_VERSION}

          if [ -z "$(git status --porcelain)" ]; then
            echo "‚ú®"
          else
            echo "dirty working directory..."
            git add .
            git commit -m "dirty working directory..."
          fi

          npm version ${NEXT_VERSION}

      - name: üèó Build
        run: yarn build

      - name: üè∑ Push Tag
        run: git push origin --tags

      - name: üöÄ Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üê± Create GitHub release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: true
          release_name: v${{ steps.version.outputs.NEXT_VERSION }}
          tag_name: v${{ steps.version.outputs.NEXT_VERSION }}
        env:
          # need this token in order to have it trigger the comment and deployment test workflows
          GITHUB_TOKEN: ${{ secrets.NIGHTLY_PAT }}

  comment:
    needs: [nightly]
    name: üõ¥ Kick off comment and deployment test workflows
    if: github.repository == 'mcansh/nightly-release-test'
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.NIGHTLY_PAT }}
          event-type: release
          client-payload: '{ "ref": "refs/tags/v${{ needs.nightly.outputs.NEXT_VERSION }}" }'
