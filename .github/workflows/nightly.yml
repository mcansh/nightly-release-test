name: Nightly Release

on:
  workflow_dispatch:
  schedule:
    - cron: "15 22 * * *" # every day at 10:15 PM UTC

jobs:
  nightly:
    name: Nightly Release
    if: github.repository == 'mcansh/nightly-release-test'
    runs-on: ubuntu-latest
    outputs:
      NEXT_VERSION: ${{ steps.version.outputs.NEXT_VERSION }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: dev
          token: ${{ secrets.NIGHTLY_PAT }}
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"

      - name: Install dependencies
        run: npm install

      - name: Set up git
        run: |
          git config user.email "hello@remix.run"
          git config user.name "Remix Run Bot"

      - name: Make a change
        run: |
          NOW=$(date +'%Y-%m-%d')
          echo "console.log(\"greetings ${NOW}; nightly release\");" > ./src/index.ts
          git add .
          git commit -m "chore: updated ${NOW}"

      - name: Build
        run: npm run build

      - name: Update Version
        id: version
        run: |
          SHA=$(git rev-parse HEAD)
          SHORT_SHA=${SHA::7}
          NEXT_VERSION=0.0.0-nightly-${SHORT_SHA}
          echo "::set-output name=NEXT_VERSION::${NEXT_VERSION}"

          git checkout -b nightly/${NEXT_VERSION}

          if [ -z "$(git status --porcelain)" ]; then
            echo "âœ¨"
          else
            echo "ðŸ’¿ committing changes"
            git add .
            git commit -m "something"
          fi

          npm version ${NEXT_VERSION}

          git push origin --tags

      - name: Publish
        run: npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: true
          release_name: v${{ steps.version.outputs.NEXT_VERSION }}
          tag_name: v${{ steps.version.outputs.NEXT_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.NIGHTLY_PAT }}

  comment:
    needs: [nightly]
    name: ðŸ›´ Kick of comment and deployment workflows
    if: github.repository == 'mcansh/nightly-release-test'
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ›´ Kick of comment and deployment workflows
        env:
          GITHUB_TOKEN: ${{ secrets.NIGHTLY_PAT }}
          EVENT: release
          REPO: mcansh/nightly-release-test
          VERSION: refs/tags/v${{ needs.nightly.outputs.NEXT_VERSION }}
        run: |
          curl -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            --request POST \
            --data '{ "event_type": "${EVENT}", "client_payload": { "ref": "${VERSION}" } }' \
            https://api.github.com/repos/${REPO}/dispatches
