name: üåí Nightly Release

on:
  workflow_dispatch:
  schedule:
    - cron: "30 19 * * *" # every day at 3:30 PM EST

env:
  CI: true

jobs:
  # HEADS UP! this "nightly" job will only ever run on the `main` branch due to it being a cron job,
  # and the last commit on main will be what github shows as the trigger
  # however in the checkout below we specify the `dev` branch, so all the scripts
  # in this job will be ran from that, confusing i know, so in some cases we'll need to create
  # multiple PRs when modifying nightly release processes
  nightly:
    name: üåí Nightly Release
    if: github.repository == 'mcansh/nightly-release-test'
    runs-on: ubuntu-latest
    outputs:
      # allows this to be used in the `comment` job below - will be undefined if there's no release necessary
      NEXT_VERSION: ${{ steps.version.outputs.NEXT_VERSION }}
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          ref: dev
          # checkout using a custom token so that we can push later on
          token: ${{ secrets.NIGHTLY_PAT }}
          fetch-depth: 0

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"

      - name: üì• Install deps
        run: npm ci

      - name: ‚§¥Ô∏è Update Version if needed
        id: version
        run: |
          # get latest commit sha
          SHA=$(git rev-parse HEAD)
          SHORT_SHA=${SHA::7}

          # get latest nightly tag
          LATEST_NIGHTLY_TAG=$(git tag -l v0.0.0-nightly-\* --sort=-committerdate | head -n 1)

          CHANGES=$(git diff $LATEST_NIGHTLY_TAG..dev -- ./packages/)

          # check if there are changes to ./packages
          if [[ -n $(echo $CHANGES | xargs) ]]; then
            git config --local user.email "hello@remix.run"
            git config --local user.name "Remix Run Bot"

            DATE=$(date '+%Y%m%d')
            NEXT_VERSION=v0.0.0-nightly-${SHORT_SHA}-${DATE}

            git checkout -b nightly/${NEXT_VERSION}

            if [ -z "$(git status --porcelain)" ]; then
              echo "‚ú®"
            else
              echo "dirty working directory..."
              git add .
              git commit -m "dirty working directory..."
            fi

            npm version -ws ${NEXT_VERSION}

            git add .

            git commit -m "üåí Nightly Release ${NEXT_VERSION}"

            git tag ${NEXT_VERSION}

            echo ::set-output name=NEXT_VERSION::${NEXT_VERSION}
          else
            echo "üõë no changes since last nightly, skipping..."
          fi

      - name: üèó Build
        if: steps.version.outputs.NEXT_VERSION
        run: npm run build

      - name: üè∑ Push Tag
        if: steps.version.outputs.NEXT_VERSION
        run: git push origin --tags

      - name: üöÄ Publish
        if: steps.version.outputs.NEXT_VERSION
        run: npm run publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_VERSION: ${{ steps.version.outputs.NEXT_VERSION }}

  comment:
    needs: [nightly]
    name: üìù Comment on related issues and pull requests
    if: github.repository == 'mcansh/nightly-release-test' && needs.nightly.outputs.NEXT_VERSION
    uses: ./.github/workflows/release-comments.yml
    with:
      ref: "refs/tags/${{ needs.nightly.outputs.NEXT_VERSION }}"
      packageVersionToFollow: "@mcansh/nightly-release-test-two"
